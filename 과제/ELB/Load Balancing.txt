## Load Balancing이란??
- 알고리즘에 따라서 요청들을 분산시키고, 각 서버에서 제한적인 시간 안에 처리하도록 한다.
- 병렬로 운영되는 기기 사이에서 부하가 균등하게 되도록 하는 것을 말한다.


## Load Balancing의 목적
- 성능 향상 : 클라이언트들의 수많은 요청들을 여러대의 서버가 나누어서 처리해주기 때문에 빠르게 처리가 가능하다.
- 안전성 향상 : 여러개의 ec2 인스턴스를 사용함으로써 사용중인 ec2 인스턴스중 몇대가 죽어도 남은 ec2 인스턴스가 클라이언트들의 요청을 처리해줄 수 있다.
- 서버 장애 예방 : 갑작스러운 대량의 요청들을 기존의 ec2 인스턴스가 처리하지 못하더라도 예비의 ec2 인스턴스를 여러대 추가적으로 불러와 요청을 처리할 수 있다.
- 고가용성 : 서버가 오랜기간 동안 정상적으로 작동이 가능하다. = 고장이 잘 나지 않는다.
- 성능 향상 기반 제공 : 클라이언트의 요청이 늘어남에 따라 ec2 인스턴스를 추가적으로 불러올 수 있어서 성능 향상 기반을 제공한다.


## Load Balancing 관련 용어
- Load Balancing 알고리즘 : 트래픽을 각 서버에 분배하는 방법
- Health Check : 서버가 살아있는지 확인하는 것, 만약 서버가 중단 되었다면 트래픽을 분배하지 않음.
- Connection Draining(등록 취소 지연) : 사용자의 요청을 처리중인 서버를 곧바로 삭제하지 못하도록 방지하는 기능.
  트래픽이 줄어서 늘렸던 인스턴스 중 몇개를 삭제하려고 할 때, 삭제될 인스턴스에 연결중인 사용자가 있을 수 있기 때문에 지정한 시간만큼 기다린 이후에 인스턴스를 삭제한다.
- Latency : Load Balancer와 서버 사이의 지연시간


## AWS의 Elastic Load Balancing의 특징
- 부하를 여러 개의 EC2에 골고루 분산시켜주는 역할을 한다.
- 리전(Region) 내의 존재. 리전별로 생성이 가능하다.
- 모든 EC2 인스턴스의 부하를 분산시켜주는 것이 아니라, 대상 그룹(Target Group) 내의 EC2 인스턴스들에게만 부하를 분산시켜준다.
- 여러개의 가용영억을 부하를 분산시킬 수 있기 때문에 가용영역 하나가 중단되어도 정상적으로 서비스가 가능하다.
- 3가지의 유형의 로드 벨런서가 있다. 
    * ALB (Application Load Balancer) - 요청 수준에서 작동. HTTP, HTTPS 트래픽을 사용하는 애플리케이션을 위한 유연한 기능이 필요한 경우 사용.
    * NLB (Network Load Balancer) - 연결 수준에서 작동. TCP, UDP. 안전하게 초당 수백만개의 요청을 처리하면서도 극히 낮은 지연시간을 유지.
    * CLB (Classic Load Balancer) - 과거에 사용하던 로드 밸런서. ec2 classic network에서 구축된 기존의 애플리케이션이 있는 경우 사용.